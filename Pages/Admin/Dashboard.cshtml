@page
@model Nexy.Pages.Admin.DashboardModel
@{
    ViewData["Title"] = "Admin Dashboard";
}

<style>
    body {
        font-family: Arial, sans-serif;
        background-color: #f4f4f4;
        margin: 0;
        padding: 0;
    }
    .container {
        max-width: 1200px;
        margin: 0 auto;
        padding: 20px;
    }
    h1 {
        font-size: 2em;
        color: #333;
        margin-bottom: 20px;
    }
    .metrics-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
        gap: 20px;
        margin-bottom: 30px;
    }
    .metric-card {
        background: #fff;
        border-radius: 8px;
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        padding: 20px;
        text-align: center;
    }
    .metric-card h2 {
        font-size: 1.2em;
        color: #666;
        margin-bottom: 10px;
    }
    .metric-card p {
        font-size: 2em;
        font-weight: bold;
    }
    .metric-visits { color: #007bff; }
    .metric-conversions { color: #28a745; }
    .metric-cr { color: #6f42c1; }
    .charts-grid {
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 20px;
        margin-bottom: 30px;
    }
    .chart-container {
        background: #fff;
        border-radius: 8px;
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        padding: 20px;
    }
    .chart-container h2 {
        font-size: 1.2em;
        color: #666;
        margin-bottom: 15px;
    }
    .table-container {
        background: #fff;
        border-radius: 8px;
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        padding: 20px;
        margin-bottom: 30px;
        overflow-x: auto;
    }
    table {
        width: 100%;
        border-collapse: collapse;
    }
    th, td {
        padding: 12px;
        text-align: left;
        border-bottom: 1px solid #ddd;
    }
    th {
        background: #f8f9fa;
        color: #666;
    }
    tr:hover {
        background: #f1f1f1;
    }
    .recommendations {
        background: #fff;
        border-radius: 8px;
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        padding: 20px;
    }
    .recommendations h2 {
        font-size: 1.2em;
        color: #666;
        margin-bottom: 15px;
    }
    .recommendations ul {
        list-style: disc;
        padding-left: 20px;
    }
    .recommendations li {
        margin-bottom: 10px;
        color: #333;
    }
</style>

<div class="container">
    <h1>Admin Dashboard: Campaign Analytics</h1>

    <!-- Общие метрики -->
    <div class="metrics-grid">
        <div class="metric-card">
            <h2>Total Visits</h2>
            <p class="metric-visits">@Model.TotalVisits</p>
        </div>
        <div class="metric-card">
            <h2>Total Conversions</h2>
            <p class="metric-conversions">@Model.TotalConversions</p>
        </div>
        <div class="metric-card">
            <h2>Conversion Rate</h2>
            <p class="metric-cr">@Model.OverallConversionRate%</p>
        </div>
    </div>

    <!-- Графики -->
    <div class="charts-grid">
        <div class="chart-container">
            <h2>Campaign Performance</h2>
            <canvas id="campaignChart"></canvas>
        </div>
        <div class="chart-container">
            <h2>Top Profiles by Conversions</h2>
            <canvas id="profileChart"></canvas>
        </div>
    </div>

    <!-- Таблица кампаний -->
    <div class="table-container">
        <h2>Campaign Details</h2>
        <table>
            <thead>
                <tr>
                    <th>Campaign</th>
                    <th>Visits</th>
                    <th>Conversions</th>
                    <th>Conversion Rate</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var stat in Model.CampaignStats)
                {
                    <tr>
                        <td>@stat.Campaign</td>
                        <td>@stat.Visits</td>
                        <td>@stat.Conversions</td>
                        <td>@stat.ConversionRate%</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <!-- Рекомендации -->
    <div class="recommendations">
        <h2>Recommendations for Scaling</h2>
        <ul>
            @if (Model.CampaignStats.Any(c => c.ConversionRate >= 5))
            {
                var topCampaign = Model.CampaignStats.First(c => c.ConversionRate >= 5);
                <li>
                    <strong>Scale "@topCampaign.Campaign"</strong>: High conversion rate (@topCampaign.ConversionRate%) with @topCampaign.Conversions conversions from @topCampaign.Visits visits. Increase ad spend by 20-30% to maximize ROI.
                </li>
            }
            else
            {
                <li>
                    <strong>No high-performing campaigns</strong>: No campaigns with conversion rate ≥ 5%. Test new ad creatives or traffic sources.
                </li>
            }
            @if (Model.CampaignStats.Any(c => c.ConversionRate < 1))
            {
                var lowPerforming = Model.CampaignStats.Where(c => c.ConversionRate < 1).Select(c => c.Campaign).ToList();
                <li>
                    <strong>Optimize low performers</strong>: Campaigns @string.Join(", ", lowPerforming) have conversion rates below 1%. Revise ad copy, targeting, or pause them to reduce costs.
                </li>
            }
            @if (Model.ProfileStats.Any())
            {
                var topProfile = Model.ProfileStats.First();
                <li>
                    <strong>Promote top profile (@topProfile.ProfileId)</strong>: Drives @topProfile.Conversions conversions. Feature in high-traffic campaigns to boost engagement.
                </li>
            }
            <li>
                <strong>Diversify traffic</strong>: Test new UtmMedium (e.g., "social", "email") to identify additional high-converting sources.
            </li>
        </ul>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js@4.4.4/dist/chart.umd.min.js"></script>
    <script>
        // График кампаний
        const campaignCtx = document.getElementById('campaignChart').getContext('2d');
        new Chart(campaignCtx, {
            type: 'bar',
            data: {
                labels: @Json.Serialize(Model.CampaignStats.Select(c => c.Campaign)),
                datasets: [
                    {
                        label: 'Visits',
                        data: @Json.Serialize(Model.CampaignStats.Select(c => c.Visits)),
                        backgroundColor: 'rgba(0, 123, 255, 0.5)',
                        borderColor: 'rgba(0, 123, 255, 1)',
                        borderWidth: 1
                    },
                    {
                        label: 'Conversions',
                        data: @Json.Serialize(Model.CampaignStats.Select(c => c.Conversions)),
                        backgroundColor: 'rgba(40, 167, 69, 0.5)',
                        borderColor: 'rgba(40, 167, 69, 1)',
                        borderWidth: 1
                    }
                ]
            },
            options: {
                scales: {
                    y: { beginAtZero: true }
                },
                plugins: {
                    legend: { position: 'top' }
                }
            }
        });

        // График профилей
        const profileCtx = document.getElementById('profileChart').getContext('2d');
        new Chart(profileCtx, {
            type: 'doughnut',
            data: {
                labels: @Json.Serialize(Model.ProfileStats.Select(p => p.ProfileId)),
                datasets: [{
                    label: 'Conversions',
                    data: @Json.Serialize(Model.ProfileStats.Select(p => p.Conversions)),
                    backgroundColor: [
                        'rgba(255, 99, 132, 0.5)',
                        'rgba(0, 123, 255, 0.5)',
                        'rgba(255, 206, 86, 0.5)',
                        'rgba(40, 167, 69, 0.5)',
                        'rgba(111, 66, 193, 0.5)'
                    ],
                    borderColor: [
                        'rgba(255, 99, 132, 1)',
                        'rgba(0, 123, 255, 1)',
                        'rgba(255, 206, 86, 1)',
                        'rgba(40, 167, 69, 1)',
                        'rgba(111, 66, 193, 1)'
                    ],
                    borderWidth: 1
                }]
            },
            options: {
                plugins: {
                    legend: { position: 'top' }
                }
            }
        });
    </script>
}