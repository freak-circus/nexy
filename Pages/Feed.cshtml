@page
@model Nexy.Pages.FeedModel
@{
Layout = "_Layout";
}

<div class="container">
    <div class="feed">
        @if (!User.Identity.IsAuthenticated)
        {
        <div class="feed__notice">
            NSFW content is only available to authorized users. <a href="/Identity/Account/Login">Log in</a> to view.
        </div>
        }
        <div id="post-container" class="space-y-4">
            <partial name="_FeedPostListPartial" model="Model.Posts"/>
        </div>
        <button id="load-more" class="load-more pulse"
                style="display: block; margin: 1rem auto; padding: 1rem 2rem; font-size: 1.25rem; cursor: pointer;">
            Load More
        </button>
    </div>

    <div class="modal" id="imageModal">
        <img class="modal__image" id="modalImage" src="" alt="Full image" style="display: none;" />
        <video class="modal__video" id="modalVideo" autoplay loop muted playsinline style="display: none;"></video>
    </div>
</div>

@section Scripts {
<script>
    document.addEventListener('DOMContentLoaded', function () {
        // Modal for images and videos
        const mediaElements = document.querySelectorAll('.feed-post__image, .feed-post__video');
        const modal = document.getElementById('imageModal');
        const modalImage = document.getElementById('modalImage');
        const modalVideo = document.getElementById('modalVideo');

        function openModal(src, isVideo) {
            modalImage.style.display = isVideo ? 'none' : 'block';
            modalVideo.style.display = isVideo ? 'block' : 'none';
            if (isVideo) {
                modalVideo.src = src;
                modalVideo.play();
            } else {
                modalImage.src = src;
            }
            modal.classList.add('active');
        }

        mediaElements.forEach(media => {
            media.addEventListener('click', function () {
                const src = this.dataset.fullsrc;
                const isVideo = /\.(mp4|webm|ogg)$/i.test(src);
                openModal(src, isVideo);
            });
        });

        modal.addEventListener('click', function () {
            modal.classList.remove('active');
            modalVideo.pause();
            modalVideo.src = '';
        });

        // Load More
        let loaded = @Model.LoadedCount;
        document.getElementById("load-more").addEventListener("click", function () {
            fetch(`/Feed?handler=LoadMore&skip=${loaded}`)
                .then(response => response.text())
                .then(html => {
                    const container = document.getElementById("post-container");
                    const tempDiv = document.createElement("div");
                    tempDiv.innerHTML = html;
                    Array.from(tempDiv.children).forEach(child => {
                        child.classList.add("fade-in");
                        container.appendChild(child);
                    });
                    loaded += 50;

                    // Rebind media click events
                    const newMedia = container.querySelectorAll('.feed-post__image, .feed-post__video');
                    newMedia.forEach(media => {
                        media.addEventListener('click', function () {
                            const src = this.dataset.fullsrc;
                            const isVideo = /\.(mp4|webm|ogg)$/i.test(src);
                            openModal(src, isVideo);
                        });
                    });
                });
        });
    });
</script>
}